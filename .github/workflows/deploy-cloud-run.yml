name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]

env:
  REGION: us-central1
  SERVICE_NAME: gemini-chat
  PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    environment: prod

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with: 
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy "$SERVICE_NAME" \
            --source . \
            --region="$REGION" \
            --project="$PROJECT_ID" \
            --platform managed \
            --allow-unauthenticated \
            --memory=2Gi \
            --cpu=2 \
            --max-instances=10 \
            --timeout=300 \
            --concurrency=80 \
            --set-env-vars NODE_ENV=production,GOOGLE_GENERATIVE_AI_API_KEY=${{ secrets.GOOGLE_GENERATIVE_AI_API_KEY }},JWT_SECRET=${{ secrets.JWT_SECRET }},MONGODB_URI=${{ secrets.MONGODB_URI }},ADMIN_USERNAME=${{ vars.ADMIN_USERNAME }},ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }},ADMIN_EMAIL=${{ vars.ADMIN_EMAIL }},ADMIN_NAME=${{ vars.ADMIN_NAME }} \
            --set-build-env-vars GOOGLE_GENERATIVE_AI_API_KEY=${{ secrets.GOOGLE_GENERATIVE_AI_API_KEY }},JWT_SECRET=${{ secrets.JWT_SECRET }},MONGODB_URI=${{ secrets.MONGODB_URI }},ADMIN_USERNAME=${{ vars.ADMIN_USERNAME }},ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }},ADMIN_EMAIL=${{ vars.ADMIN_EMAIL }},ADMIN_NAME=${{ vars.ADMIN_NAME }}